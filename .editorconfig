
root = true


[*.cs]
indent_style = space
indent_size = 4
trim_trailing_whitespace = true
insert_final_newline = true

# Do not require XML documentation everywhere
dotnet_diagnostic.CS1591.severity = none

# Code style severity levels. Levels warning and error will be reported during build if EnforceCodeStyleInBuild == true
dotnet_diagnostic.IDE0001.severity = warning # SimplifyNames
dotnet_diagnostic.IDE0002.severity = warning # SimplifyMemberAccess
dotnet_diagnostic.IDE0003.severity = warning # RemoveQualification
dotnet_diagnostic.IDE0004.severity = warning # RemoveUnnecessaryCast
dotnet_diagnostic.IDE0005.severity = warning # RemoveUnnecessaryImports
dotnet_diagnostic.IDE0006.severity = warning # IntellisenseBuildFailed
dotnet_diagnostic.IDE0007.severity = none    # UseImplicitType
dotnet_diagnostic.IDE0008.severity = none    # UseExplicitType
dotnet_diagnostic.IDE0009.severity = warning # AddQualification
dotnet_diagnostic.IDE0010.severity = none    # PopulateSwitchStatement
dotnet_diagnostic.IDE0011.severity = warning # AddBraces
dotnet_diagnostic.IDE0016.severity = warning # UseThrowExpression
dotnet_diagnostic.IDE0017.severity = warning # UseObjectInitializer
dotnet_diagnostic.IDE0018.severity = warning # InlineDeclaration
dotnet_diagnostic.IDE0019.severity = warning # InlineAsTypeCheckId
dotnet_diagnostic.IDE0020.severity = warning # InlineIsTypeCheckId
dotnet_diagnostic.IDE0021.severity = none    # UseExpressionBodyForConstructors
dotnet_diagnostic.IDE0022.severity = none    # UseExpressionBodyForMethods
dotnet_diagnostic.IDE0023.severity = none    # UseExpressionBodyForConversionOperators
dotnet_diagnostic.IDE0024.severity = none    # UseExpressionBodyForOperators
dotnet_diagnostic.IDE0025.severity = none    # UseExpressionBodyForProperties
dotnet_diagnostic.IDE0026.severity = none    # UseExpressionBodyForIndexers
dotnet_diagnostic.IDE0027.severity = none    # UseExpressionBodyForAccessors
dotnet_diagnostic.IDE0028.severity = warning # UseCollectionInitializer
dotnet_diagnostic.IDE0029.severity = warning # UseCoalesceExpression
dotnet_diagnostic.IDE0030.severity = warning # UseCoalesceExpressionForNullable
dotnet_diagnostic.IDE0031.severity = warning # UseNullPropagation
dotnet_diagnostic.IDE0032.severity = warning # UseAutoProperty
dotnet_diagnostic.IDE0033.severity = warning # UseExplicitTupleName
dotnet_diagnostic.IDE0034.severity = warning # UseDefaultLiteral
dotnet_diagnostic.IDE0035.severity = warning # RemoveUnreachableCode
dotnet_diagnostic.IDE0036.severity = warning # OrderModifiers
dotnet_diagnostic.IDE0037.severity = warning # UseInferredMemberName
dotnet_diagnostic.IDE0038.severity = warning # InlineIsTypeWithoutNameCheckDiagnosticsId
dotnet_diagnostic.IDE0039.severity = warning # UseLocalFunction
dotnet_diagnostic.IDE0040.severity = warning # AddAccessibilityModifiers
dotnet_diagnostic.IDE0041.severity = warning # UseIsNullCheck
dotnet_diagnostic.IDE0042.severity = warning # UseDeconstruction
dotnet_diagnostic.IDE0043.severity = warning # ValidateFormatString
dotnet_diagnostic.IDE0044.severity = warning # MakeFieldReadonly
dotnet_diagnostic.IDE0045.severity = none    # UseConditionalExpressionForAssignment
dotnet_diagnostic.IDE0046.severity = none    # UseConditionalExpressionForReturn
dotnet_diagnostic.IDE0047.severity = warning # RemoveUnnecessaryParentheses
dotnet_diagnostic.IDE0048.severity = warning # AddRequiredParentheses
dotnet_diagnostic.IDE0049.severity = warning # PreferBuiltInOrFrameworkType
dotnet_diagnostic.IDE0051.severity = warning # RemoveUnusedMembers
dotnet_diagnostic.IDE0052.severity = warning # RemoveUnreadMembers
dotnet_diagnostic.IDE0053.severity = warning # UseExpressionBodyForLambdaExpressions
dotnet_diagnostic.IDE0054.severity = warning # UseCompoundAssignment
dotnet_diagnostic.IDE0056.severity = warning # UseIndexOperator
dotnet_diagnostic.IDE0057.severity = warning # UseRangeOperator
dotnet_diagnostic.IDE0058.severity = none    # ExpressionValueIsUnused
dotnet_diagnostic.IDE0059.severity = warning # ValueAssignedIsUnused
dotnet_diagnostic.IDE0060.severity = warning # UnusedParameter
dotnet_diagnostic.IDE0061.severity = warning # UseExpressionBodyForLocalFunctions
dotnet_diagnostic.IDE0062.severity = warning # MakeLocalFunctionStatic
dotnet_diagnostic.IDE0063.severity = warning # UseSimpleUsingStatement
dotnet_diagnostic.IDE0064.severity = warning # MakeStructFieldsWritable
dotnet_diagnostic.IDE0065.severity = warning # MoveMisplacedUsingDirectives
dotnet_diagnostic.IDE0066.severity = warning # ConvertSwitchStatementToExpression
dotnet_diagnostic.IDE0070.severity = warning # UseSystemHashCode
dotnet_diagnostic.IDE0071.severity = warning # SimplifyInterpolationId
dotnet_diagnostic.IDE0072.severity = none    # PopulateSwitchExpression
dotnet_diagnostic.IDE0073.severity = warning # FileHeaderMismatch
dotnet_diagnostic.IDE0074.severity = warning # UseCoalesceCompoundAssignment
dotnet_diagnostic.IDE0075.severity = warning # SimplifyConditionalExpression
dotnet_diagnostic.IDE0076.severity = warning # InvalidSuppressMessageAttribute
dotnet_diagnostic.IDE0077.severity = warning # LegacyFormatSuppressMessageAttribute
dotnet_diagnostic.IDE0078.severity = warning # UsePatternCombinators
dotnet_diagnostic.IDE0079.severity = warning # RemoveUnnecessarySuppression
dotnet_diagnostic.IDE0080.severity = warning # RemoveConfusingSuppressionForIsExpression
dotnet_diagnostic.IDE0081.severity = warning # RemoveUnnecessaryByVal
dotnet_diagnostic.IDE0082.severity = warning # ConvertTypeOfToNameOf
dotnet_diagnostic.IDE0083.severity = warning # UseNotPattern
dotnet_diagnostic.IDE0090.severity = warning # UseImplicitObjectCreation
dotnet_diagnostic.IDE0100.severity = warning # RemoveRedundantEquality
dotnet_diagnostic.IDE0110.severity = warning # RemoveUnnecessaryDiscardDesignation
dotnet_diagnostic.IDE0120.severity = warning # SimplifyLinqExpression
dotnet_diagnostic.IDE0130.severity = warning # MatchFolderAndNamespace
dotnet_diagnostic.IDE0140.severity = warning # SimplifyObjectCreation
dotnet_diagnostic.IDE0150.severity = warning # UseNullCheckOverTypeCheck
dotnet_diagnostic.IDE0160.severity = warning # UseBlockScopedNamespace
dotnet_diagnostic.IDE0161.severity = warning # UseFileScopedNamespace
dotnet_diagnostic.IDE0170.severity = warning # SimplifyPropertyPattern
dotnet_diagnostic.IDE0180.severity = warning # UseTupleSwap
dotnet_diagnostic.IDE0190.severity = warning # UseParameterNullCheckingId
dotnet_diagnostic.IDE0200.severity = warning # RemoveUnnecessaryLambdaExpression
dotnet_diagnostic.IDE0290.severity = none    # PreferPrimaryConstructors
dotnet_diagnostic.IDE1001.severity = warning # AnalyzerChangedId
dotnet_diagnostic.IDE1002.severity = warning # AnalyzerDependencyConflictId
dotnet_diagnostic.IDE1003.severity = warning # MissingAnalyzerReferenceId
dotnet_diagnostic.IDE1004.severity = warning # ErrorReadingRulesetId
dotnet_diagnostic.IDE1005.severity = warning # InvokeDelegateWithConditionalAccessId
dotnet_diagnostic.IDE1006.severity = warning # NamingRuleId
dotnet_diagnostic.IDE1007.severity = warning # UnboundIdentifierId
dotnet_diagnostic.IDE2000.severity = warning # MultipleBlankLines
dotnet_diagnostic.IDE2001.severity = warning # EmbeddedStatementPlacement
dotnet_diagnostic.IDE2002.severity = warning # ConsecutiveBracePlacement
dotnet_diagnostic.IDE2003.severity = warning # ConsecutiveStatementPlacement
dotnet_diagnostic.IDE2004.severity = warning # ConstructorInitializerPlacement

dotnet_sort_system_directives_first = true

# Don't use this. qualifier
dotnet_style_qualification_for_field = false
dotnet_style_qualification_for_property = false

# use int x = .. over Int32
dotnet_style_predefined_type_for_locals_parameters_members = true

# use int.MaxValue over Int32.MaxValue
dotnet_style_predefined_type_for_member_access = true

dotnet_style_collection_initializer = true
dotnet_style_object_initializer = true

# Non-private static fields are PascalCase
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.severity = warning
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.symbols = non_private_static_fields
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.style = non_private_static_field_style

dotnet_naming_symbols.non_private_static_fields.applicable_kinds = field
dotnet_naming_symbols.non_private_static_fields.applicable_accessibilities = public, protected, internal, protected_internal, private_protected
dotnet_naming_symbols.non_private_static_fields.required_modifiers = static

dotnet_naming_style.non_private_static_field_style.capitalization = pascal_case

# Non-private readonly fields are PascalCase
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.severity = warning
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.symbols = non_private_readonly_fields
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.style = non_private_readonly_field_style

dotnet_naming_symbols.non_private_readonly_fields.applicable_kinds = field
dotnet_naming_symbols.non_private_readonly_fields.applicable_accessibilities = public, protected, internal, protected_internal, private_protected
dotnet_naming_symbols.non_private_readonly_fields.required_modifiers = readonly

dotnet_naming_style.non_private_readonly_field_style.capitalization = pascal_case

# Constants are PascalCase
dotnet_naming_rule.constants_should_be_pascal_case.severity = warning
dotnet_naming_rule.constants_should_be_pascal_case.symbols = constants
dotnet_naming_rule.constants_should_be_pascal_case.style = constant_style

dotnet_naming_symbols.constants.applicable_kinds = field, local
dotnet_naming_symbols.constants.required_modifiers = const

dotnet_naming_style.constant_style.capitalization = pascal_case

# Static fields are camelCase and start with s_
dotnet_naming_rule.static_fields_should_be_camel_case.severity = warning
dotnet_naming_rule.static_fields_should_be_camel_case.symbols = static_fields
dotnet_naming_rule.static_fields_should_be_camel_case.style = static_field_style

dotnet_naming_symbols.static_fields.applicable_kinds = field
dotnet_naming_symbols.static_fields.required_modifiers = static

dotnet_naming_style.static_field_style.capitalization = camel_case
dotnet_naming_style.static_field_style.required_prefix = s_

# Instance fields are camelCase and start with _
dotnet_naming_rule.instance_fields_should_be_camel_case.severity = warning
dotnet_naming_rule.instance_fields_should_be_camel_case.symbols = instance_fields
dotnet_naming_rule.instance_fields_should_be_camel_case.style = instance_field_style

dotnet_naming_symbols.instance_fields.applicable_kinds = field

dotnet_naming_style.instance_field_style.capitalization = camel_case
dotnet_naming_style.instance_field_style.required_prefix = _

# Locals and parameters are camelCase
dotnet_naming_rule.locals_should_be_camel_case.severity = warning
dotnet_naming_rule.locals_should_be_camel_case.symbols = locals_and_parameters
dotnet_naming_rule.locals_should_be_camel_case.style = camel_case_style

dotnet_naming_symbols.locals_and_parameters.applicable_kinds = parameter, local

dotnet_naming_style.camel_case_style.capitalization = camel_case

# Local functions are PascalCase
dotnet_naming_rule.local_functions_should_be_pascal_case.severity = warning
dotnet_naming_rule.local_functions_should_be_pascal_case.symbols = local_functions
dotnet_naming_rule.local_functions_should_be_pascal_case.style = local_function_style

dotnet_naming_symbols.local_functions.applicable_kinds = local_function

dotnet_naming_style.local_function_style.capitalization = pascal_case

# By default, name items with PascalCase
dotnet_naming_rule.members_should_be_pascal_case.severity = warning
dotnet_naming_rule.members_should_be_pascal_case.symbols = all_members
dotnet_naming_rule.members_should_be_pascal_case.style = pascal_case_style

dotnet_naming_symbols.all_members.applicable_kinds = *

dotnet_naming_style.pascal_case_style.capitalization = pascal_case


# Suggest more modern language features when available
csharp_style_pattern_matching_over_is_with_cast_check = true:warning
csharp_style_pattern_matching_over_as_with_null_check = true:warning
csharp_style_inlined_variable_declaration = true:warning
csharp_style_throw_expression = true:warning
csharp_style_conditional_delegate_call = true:warning
dotnet_style_coalesce_expression = true:warning
dotnet_style_null_propagation = true:warning
dotnet_style_explicit_tuple_names = true:warning

csharp_style_implicit_object_creation_when_type_is_apparent = true

csharp_prefer_simple_using_statement = true

# Whitespace options
dotnet_style_allow_multiple_blank_lines_experimental = false

# Newline settings
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true

# Namespace settings
csharp_style_namespace_declarations = file_scoped

csharp_prefer_braces = true # Prefer curly braces even for one line of code
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:warning

# Newline settings
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left

# Whitespace options
csharp_style_allow_embedded_statements_on_same_line_experimental = false
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = false
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = false

# Prefer property-like constructs to have an expression-body
csharp_style_expression_bodied_properties = true:none
csharp_style_expression_bodied_indexers = true:none
csharp_style_expression_bodied_accessors = true:none

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = do_not_ignore
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Blocks are allowed
csharp_prefer_braces = true:silent
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = true

# Currently only enabled for C# due to crash in VB analyzer.  VB can be enabled once
# https://github.com/dotnet/roslyn/pull/54259 has been published.
dotnet_style_allow_statement_immediately_after_block_experimental = false

# CA1012: Abstract types should not have public constructors
dotnet_diagnostic.CA1012.severity = warning

# CA1018: Mark attributes with AttributeUsageAttribute
dotnet_diagnostic.CA1018.severity = warning

# CA1047: Do not declare protected member in sealed type
dotnet_diagnostic.CA1047.severity = warning

# CA1305: Specify IFormatProvider
dotnet_diagnostic.CA1305.severity = none

# CA1507: Use nameof to express symbol names
dotnet_diagnostic.CA1507.severity = warning

# CA1725: Parameter names should match base declaration
dotnet_diagnostic.CA1725.severity = warning

# CA1802: Use literals where appropriate
dotnet_diagnostic.CA1802.severity = warning

# CA1805: Do not initialize unnecessarily
dotnet_diagnostic.CA1805.severity = warning

# CA1810: Do not initialize unnecessarily
dotnet_diagnostic.CA1810.severity = warning

# CA1821: Remove empty Finalizers
dotnet_diagnostic.CA1821.severity = warning

# CA1822: Make member static
dotnet_diagnostic.CA1822.severity = warning
dotnet_code_quality.CA1822.api_surface = private, internal

# CA1823: Avoid unused private fields
dotnet_diagnostic.CA1823.severity = warning

# CA1825: Avoid zero-length array allocations
dotnet_diagnostic.CA1825.severity = warning

# CA1826: Do not use Enumerable methods on indexable collections. Instead use the collection directly
dotnet_diagnostic.CA1826.severity = warning

# CA1827: Do not use Count() or LongCount() when Any() can be used
dotnet_diagnostic.CA1827.severity = warning

# CA1828: Do not use CountAsync() or LongCountAsync() when AnyAsync() can be used
dotnet_diagnostic.CA1828.severity = warning

# CA1829: Use Length/Count property instead of Count() when available
dotnet_diagnostic.CA1829.severity = warning

# CA1830: Prefer strongly-typed Append and Insert method overloads on StringBuilder
dotnet_diagnostic.CA1830.severity = warning

# CA1831: Use AsSpan or AsMemory instead of Range-based indexers when appropriate
# CA1832: Use AsSpan or AsMemory instead of Range-based indexers when appropriate
# CA1833: Use AsSpan or AsMemory instead of Range-based indexers when appropriate
dotnet_diagnostic.CA1831.severity = warning
dotnet_diagnostic.CA1832.severity = warning
dotnet_diagnostic.CA1833.severity = warning

# CA1834: Consider using 'StringBuilder.Append(char)' when applicable
dotnet_diagnostic.CA1834.severity = warning

# CA1835: Prefer the 'Memory'-based overloads for 'ReadAsync' and 'WriteAsync'
dotnet_diagnostic.CA1835.severity = warning

# CA1836: Prefer IsEmpty over Count
dotnet_diagnostic.CA1836.severity = warning

# CA1837: Use 'Environment.ProcessId'
dotnet_diagnostic.CA1837.severity = warning

# CA1838: Avoid 'StringBuilder' parameters for P/Invokes
dotnet_diagnostic.CA1838.severity = warning

# CA1839: Use 'Environment.ProcessPath'
dotnet_diagnostic.CA1839.severity = warning

# CA1840: Use 'Environment.CurrentManagedThreadId'
dotnet_diagnostic.CA1840.severity = warning

# CA1841: Prefer Dictionary.Contains methods
dotnet_diagnostic.CA1841.severity = warning

# CA1842: Do not use 'WhenAll' with a single task
dotnet_diagnostic.CA1842.severity = warning

# CA1843: Do not use 'WaitAll' with a single task
dotnet_diagnostic.CA1843.severity = warning

# CA1844: Provide memory-based overrides of async methods when subclassing 'Stream'
dotnet_diagnostic.CA1844.severity = warning

# CA1845: Use span-based 'string.Concat'
dotnet_diagnostic.CA1845.severity = warning

# CA1846: Prefer AsSpan over Substring
dotnet_diagnostic.CA1846.severity = warning

# CA1847: Use string.Contains(char) instead of string.Contains(string) with single characters
dotnet_diagnostic.CA1847.severity = warning

# CA2008: Do not create tasks without passing a TaskScheduler
dotnet_diagnostic.CA2008.severity = warning

# CA2009: Do not call ToImmutableCollection on an ImmutableCollection value
dotnet_diagnostic.CA2009.severity = warning

# CA2011: Avoid infinite recursion
dotnet_diagnostic.CA2011.severity = warning

# CA2012: Use ValueTask correctly
dotnet_diagnostic.CA2012.severity = warning

# CA2013: Do not use ReferenceEquals with value types
dotnet_diagnostic.CA2013.severity = warning

# CA2014: Do not use stackalloc in loops.
dotnet_diagnostic.CA2014.severity = warning

# CA2016: Forward the 'CancellationToken' parameter to methods that take one
dotnet_diagnostic.CA2016.severity = warning

# CA2200: Rethrow to preserve stack details
dotnet_diagnostic.CA2200.severity = warning

# CA2208: Instantiate argument exceptions correctly
dotnet_diagnostic.CA2208.severity = warning

# CA2245: Do not assign a property to itself
dotnet_diagnostic.CA2245.severity = warning

# CA2246: Assigning symbol and its member in the same statement
dotnet_diagnostic.CA2246.severity = warning

# CA2249: Use string.Contains instead of string.IndexOf to improve readability.
dotnet_diagnostic.CA2249.severity = warning
