# Use postgres/example user/password credentials
version: "3.1"

services:

  db:
    image: postgres
    restart: unless-stopped
    command:
      - -c
      - listen_addresses=localhost
    volumes:
      - db_data:/var/lib/postgresql/data
      - type: bind
        source: /opt/tyger/database
        target: /var/run/postgresql/

    network_mode: none

    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_USER: tyger-server

    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U tyger-server" ]

  data-plane:
    build:
      context: ..
      dockerfile: server/Dockerfile
      target: data-plane

    # restart: unless-stopped
    environment:
      Urls: http://unix:/opt/tyger/data-plane/tyger.data.sock
      Auth__Enabled: "false"
      DataDirectory: /app/data
      PrimarySigningCertificatePath: /opt/tyger/secrets/tyger_local_buffer_service_cert_latest_public.pem

    volumes:
      - buffers:/app/data
      - type: bind
        source: /opt/tyger/secrets/tyger_local_buffer_service_cert_latest_public.pem
        target: /opt/tyger/secrets/tyger_local_buffer_service_cert_latest_public.pem
      - type: bind
        source: /opt/tyger/data-plane
        target: /opt/tyger/data-plane

    user: "1000" # TODO: hack!
    network_mode: none
    healthcheck:
      test: [ "CMD", "/app/bin/curl", "--fail", "--unix", "/opt/tyger/data-plane/tyger.data.sock", "http://local/healthcheck" ]
      interval: 5s

  control-plane:
    build:
      context: ..
      dockerfile: server/Dockerfile
      target: control-plane

    # restart: unless-stopped

    environment:
      Urls: http://unix:/opt/tyger/control-plane/tyger.sock
      Auth__Enabled: "false"
      Compute__Docker__RunSecretsPath: /opt/tyger/control-plane/run-secrets/
      Compute__Docker__EphemeralBuffersPath: /opt/tyger/control-plane/ephemeral-buffers/
      LogArchive__LocalStorage__LogsDirectory: /app/logs
      Buffers__LocalStorage__SigningCertificatePath: /opt/tyger/secrets/tyger_local_buffer_service_cert_latest.pem
      Buffers__LocalStorage__DataPlaneEndpoint: http+unix:///opt/tyger/data-plane/tyger.data.sock
      Buffers__BufferSidecarImage: eminence.azurecr.io/buffer-sidecar:dev
      Database__ConnectionString: Host=/opt/tyger/database; Username=tyger-server
      Database__AutoMigrate: "true"
      Database__TygerServerRoleName: tyger-server

    volumes:
      - run_logs:/app/logs
      - type: bind
        source: /opt/tyger/secrets/tyger_local_buffer_service_cert_latest.pem
        target: /opt/tyger/secrets/tyger_local_buffer_service_cert_latest.pem

      - type: bind
        source: /opt/tyger/control-plane
        target: /opt/tyger/control-plane

      - type: bind
        source: /opt/tyger/data-plane/
        target: /opt/tyger/data-plane

      - type: bind
        source: /opt/tyger/database
        target: /opt/tyger/database

      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock

    user: "1000:998" # TODO: hack!
    network_mode: none

    depends_on:
      db:
        condition: service_healthy

volumes:
  db_data:
  buffers:
  run_logs:
